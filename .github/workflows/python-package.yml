name: Simulator Build

on:
  pull_request:
    branches:
      ['dev', 'main']
jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10.2"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install poetry
        uses: abatilo/actions-poetry@v2
      - name: Setup a local virtual environment (if no poetry.toml file)
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local
      - uses: actions/cache@v3
        name: Define a cache for the virtual environment based on the dependencies lock file
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}
      - name: Install the project dependencies
        run: poetry install
      - uses: chartboost/ruff-action@v1
      - name: Set up Blender
        run: |
          # Download Blender
          curl -L https://download.blender.org/release/Blender3.5/blender-3.5.0-linux-x64.tar.xz --output blender.tar.xz
          # Extract Blender
          tar -xf blender.tar.xz
          # Move Blender to desired location
          mv blender-3.5.0-linux-x64 $HOME/blender
          # Add Blender directory to PATH
          echo "export PATH=\$HOME/blender:\$PATH" >> $HOME/.bashrc
          # Refresh the current shell
          source $HOME/.bashrc || true
      - name: Verify Blender directory contents
        run: ls $HOME/blender
      - name: Verify Blender installation
        run: $HOME/blender/blender --version
      - name: Install additional dependencies for Blender rendering
        run: |
          sudo apt update
          sudo apt install build-essential git subversion cmake libx11-dev libxxf86vm-dev libxcursor-dev libxi-dev libxrandr-dev libxinerama-dev libegl-dev
          sudo apt install libwayland-dev wayland-protocols libxkbcommon-dev libdbus-1-dev linux-libc-dev
      - name: Run pytest
        run: poetry run pytest -v
        env:  
          WEATHER_API: ${{ secrets.WEATHER_API }}